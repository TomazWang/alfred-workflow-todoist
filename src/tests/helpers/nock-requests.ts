import nock from 'nock';

import { REMOTE_FIXTURES } from './fixtures';

const TODOIST_API_URI = 'https://api.todoist.com/rest/v1';

// TASKS
nock(TODOIST_API_URI)
  .get('/tasks')
  .reply(200, REMOTE_FIXTURES.tasks)
  .get('/tasks/1')
  .reply(200, REMOTE_FIXTURES.tasks[0])
  .get('/tasks/2')
  .reply(200, REMOTE_FIXTURES.tasks[1])
  .get('/tasks/3')
  .reply(200, REMOTE_FIXTURES.tasks[2])
  .get('/tasks/4')
  .reply(200, REMOTE_FIXTURES.tasks[3])
  .get('/tasks/5')
  .reply(200, REMOTE_FIXTURES.tasks[4])
  .post('/tasks')
  .reply(200, { id: 5, content: 'New task' })
  .post('/tasks/1/close')
  .reply(204, {})
  .post('/tasks/2/close')
  .reply(204, {})
  .post('/tasks/3/close')
  .reply(204, {})
  .post('/tasks/4/close')
  .reply(204, {})
  .post('/tasks/5/close')
  .reply(204, {})
  .persist();

// PROJECTS
nock(TODOIST_API_URI)
  .get('/projects')
  .reply(200, REMOTE_FIXTURES.projects)
  .get('/projects/1')
  .reply(200, REMOTE_FIXTURES.projects[0])
  .get('/projects/2')
  .reply(200, REMOTE_FIXTURES.projects[1])
  .get('/projects/3')
  .reply(200, REMOTE_FIXTURES.projects[2])
  .get('/projects/4')
  .reply(200, REMOTE_FIXTURES.projects[3])
  .get('/projects/5')
  .reply(200, REMOTE_FIXTURES.projects[4])
  .post('/projects')
  .reply(200, {})
  .delete('/projects/1')
  .reply(200, {})
  .delete('/projects/2')
  .reply(200, {})
  .delete('/projects/3')
  .reply(200, {})
  .delete('/projects/4')
  .reply(200, {})
  .delete('/projects/5')
  .reply(200, {})
  .persist();

// LABELS
nock(TODOIST_API_URI)
  .get('/labels')
  .reply(200, REMOTE_FIXTURES.labels)
  .get('/labels/1')
  .reply(200, REMOTE_FIXTURES.labels[0])
  .get('/labels/2')
  .reply(200, REMOTE_FIXTURES.labels[1])
  .get('/labels/3')
  .reply(200, REMOTE_FIXTURES.labels[2])
  .get('/labels/4')
  .reply(200, REMOTE_FIXTURES.labels[3])
  .get('/labels/5')
  .reply(200, REMOTE_FIXTURES.labels[4])
  .get('/labels/6')
  .reply(200, REMOTE_FIXTURES.labels[5])
  .get('/labels/7')
  .reply(200, REMOTE_FIXTURES.labels[6])
  .get('/labels/8')
  .reply(200, REMOTE_FIXTURES.labels[7])
  .get('/labels/9')
  .reply(200, REMOTE_FIXTURES.labels[8])
  .get('/labels/10')
  .reply(200, REMOTE_FIXTURES.labels[9])
  .post('/projects')
  .reply(200, {})
  .delete('/labels/1')
  .reply(200, {})
  .delete('/labels/2')
  .reply(200, {})
  .delete('/labels/3')
  .reply(200, {})
  .delete('/labels/4')
  .reply(200, {})
  .delete('/labels/5')
  .reply(200, {})
  .delete('/labels/6')
  .reply(200, {})
  .delete('/labels/7')
  .reply(200, {})
  .delete('/labels/8')
  .reply(200, {})
  .delete('/labels/9')
  .reply(200, {})
  .delete('/labels/10')
  .reply(200, {})
  .persist();

// SECTIONS
nock(TODOIST_API_URI)
  .get('/sections')
  .reply(200, REMOTE_FIXTURES.sections)
  .get('/sections/1')
  .reply(200, REMOTE_FIXTURES.sections[0])
  .get('/sections/2')
  .reply(200, REMOTE_FIXTURES.sections[1])
  .get('/sections/3')
  .reply(200, REMOTE_FIXTURES.sections[2])
  // .post('/sections')
  // .reply(200, {})
  .delete('/sections/1')
  .reply(200, {})
  .delete('/sections/2')
  .reply(200, {})
  .delete('/sections/3')
  .reply(200, {})
  .persist();
